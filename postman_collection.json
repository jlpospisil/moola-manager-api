{
	"variables": [],
	"info": {
		"name": "Spring CRUD Skeleton",
		"_postman_id": "4b4d47bd-fc4d-3e3d-3f5f-2f94845acc90",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const response = JSON.parse(responseBody);",
							"const token = response.token;",
							"",
							"postman.setEnvironmentVariable(\"token\", token);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Token returned\"] =  token !== null;"
						]
					}
				}
			],
			"request": {
				"url": "{{host}}/login",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"{{username}}\",\n\t\"password\": \"{{password}}\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get all items",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const items = JSON.parse(responseBody);",
							"const item = items.length > 0 ? items[0] : {};",
							"",
							"postman.setEnvironmentVariable(\"item_id\", item.id);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Items returned\"] =  Array.isArray(items);"
						]
					}
				}
			],
			"request": {
				"url": "{{host}}/api/test",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create new item",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const item = JSON.parse(responseBody);",
							"const item_id = item ? item.id : 0;",
							"postman.setEnvironmentVariable(\"item_id\", item_id);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Item created\"] =  item_id !== 0;"
						]
					}
				}
			],
			"request": {
				"url": "{{host}}/api/test",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Test Item\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get specific item",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const item = JSON.parse(responseBody);",
							"const item_id = item ? item.id : 0;",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Item returned\"] =  item_id !== 0;"
						]
					}
				}
			],
			"request": {
				"url": "{{host}}/api/test/{{item_id}}",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Update specific item",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const item = JSON.parse(responseBody);",
							"const item_id = item ? item.id : 0;",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Item updated\"] =  item_id !== 0;"
						]
					}
				}
			],
			"request": {
				"url": "{{host}}/api/test/{{item_id}}",
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Test Item Updated\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Delete specific item",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{host}}/api/test/{{item_id}}",
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		}
	]
}