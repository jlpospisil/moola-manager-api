{
	"variables": [],
	"info": {
		"name": "Moola Manager API",
		"_postman_id": "e4dbb13a-ebc1-d8d0-21cc-58323eecee0a",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Accounts",
			"description": "",
			"item": [
				{
					"name": "Create new account",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const account = JSON.parse(responseBody);",
									"const account_id = account ? account.id : 0;",
									"postman.setEnvironmentVariable(\"account_id\", account_id);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Account created\"] =  account_id !== 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/account",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Test Account\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get all accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const accounts = JSON.parse(responseBody);",
									"const account = accounts.length > 0 ? accounts[0] : {};",
									"",
									"postman.setEnvironmentVariable(\"account_id\", account.id);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Accounts returned\"] =  Array.isArray(accounts);"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/account",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get specific account",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const account = JSON.parse(responseBody);",
									"const account_id = account ? account.id : 0;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Account returned\"] =  account_id !== 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/account/{{account_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update specific account",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const account = JSON.parse(responseBody);",
									"const account_id = account ? account.id : 0;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Account updated\"] =  account_id !== 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/account/{{account_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Test Account Updated\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete specific account",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/account/{{account_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Transactions",
			"description": "",
			"item": [
				{
					"name": "Create new transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const account = JSON.parse(responseBody);",
									"const account_id = account ? account.id : 0;",
									"postman.setEnvironmentVariable(\"account_id\", account_id);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Account created\"] =  account_id !== 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/transaction",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Test Transaction\",\n\t\"amount\": 1.00\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get all transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const transactions = JSON.parse(responseBody);",
									"const transaction = transactions.length > 0 ? transactions[0] : {};",
									"",
									"postman.setEnvironmentVariable(\"transaction_id\", transaction.id);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Transactions returned\"] =  Array.isArray(transactions);"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/transaction",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get specific transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const transaction = JSON.parse(responseBody);",
									"const transaction_id = transaction ? transaction.id : 0;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Transaction returned\"] =  transaction_id !== 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/transaction/{{transaction_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update specific transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const transaction = JSON.parse(responseBody);",
									"const transaction_id = transaction ? transaction.id : 0;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Transaction updated\"] =  transaction_id !== 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/transaction/{{transaction_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Test Transaction Updated\",\n\t\"amount\": \"2.25\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete specific transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/transaction/{{transaction_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Account Transactions",
			"description": "",
			"item": [
				{
					"name": "Create new account transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const transaction = JSON.parse(responseBody);",
									"const transaction_id = transaction ? transaction.id : 0;",
									"",
									"postman.setEnvironmentVariable(\"transaction_id\", transaction_id);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Transaction returned\"] =  transaction_id !== 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/account/{{account_id}}/transaction",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Test account transaction\",\n\t\"amount\": 22.00\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get account transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const transactions = JSON.parse(responseBody);",
									"const transaction = Array.isArray(transactions) && transactions.length > 0 ? transactions[0] : null;",
									"const transaction_id = transaction ? transaction.id : 0;",
									"",
									"postman.setEnvironmentVariable(\"transaction_id\", transaction_id);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Transactions array returned\"] =  Array.isArray(transactions);",
									"tests[\"Transaction returned\"] =  transaction_id !== 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/account/{{account_id}}/transaction",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update existing account transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const transaction = JSON.parse(responseBody);",
									"const transaction_id = transaction ? transaction.id : 0;",
									"",
									"postman.setEnvironmentVariable(\"transaction_id\", transaction_id);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Transaction returned\"] =  transaction_id !== 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/account/{{account_id}}/transaction/{{transaction_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Test account transaction updated\",\n\t\"amount\": 233.00\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get specific account transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const transaction = JSON.parse(responseBody);",
									"const transaction_id = transaction ? transaction.id : 0;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Transaction returned\"] =  transaction_id !== 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/account/{{account_id}}/transaction/{{transaction_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete account transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{host}}/api/account/{{account_id}}/transaction/{{transaction_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Create new user",
			"request": {
				"url": "{{host}}/user",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"{{username}}\",\n\t\"password\": \"{{password}}\",\n\t\"first_name\": \"Test\",\n\t\"last_name\": \"User\",\n\t\"email\": \"admin@localhost\"\n}"
				},
				"description": "For this route to work, uncomment the line that says permitAll() in WebSecurity class"
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const response = JSON.parse(responseBody);",
							"const token = response.token;",
							"",
							"postman.setEnvironmentVariable(\"token\", token);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Token returned\"] =  token !== null;"
						]
					}
				}
			],
			"request": {
				"url": "{{host}}/login",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"{{username}}\",\n\t\"password\": \"{{password}}\"\n}"
				},
				"description": ""
			},
			"response": []
		}
	]
}